[{"categories":["祝賀"],"contents":"今天我大Alex生日 Happy Birthday 這個效果OK吧,Alex Chen, 11/13 天蠍座\n 運勢非常旺，心想事成，許願都容易實現，而且運勢也相當不錯，喜歡的人事物都會因為你的招喚而來到眼前。感情方面容易一見锺情，你對他有意思他也會注意到你的存在，進展滿順利。幸運色是黑色。\n 唐老師星座運勢\n我們來回顧一下 Alex Chen 的 Wings of Piano   ","permalink":"https://ycl818.github.io/blog/%E9%99%B3%E5%82%91%E8%81%96%E7%94%9F%E6%97%A5%E5%BF%AB%E6%A8%82/","tags":["HBD","Scorpio"],"title":"Happy Birthday to Alex Chen"},{"categories":null,"contents":"SFML Notes  為了幫助記憶 SFML documents\n 中文是寬字元 \u0026quot;\u0026quot; 前面要加 L =\u0026gt; L\u0026quot;我的中文\u0026quot;\n 視窗標題是系統的字形 內文字型要顯示中文 要load中文字形   std 為命名空間(namespace) cout , endl //識別符(identifier) 宣告定義完才能使用 int, if, for //關鍵字(keyword)  #include \u0026lt;iostream\u0026gt; // iostream: 標頭檔(head file) int main(){ std::cout \u0026lt;\u0026lt; \u0026#34;Hello World \u0026#34; \u0026lt;\u0026lt;std::endl; } #include \u0026lt;SFML/Window.hpp\u0026gt;int main(){ int x = 10; // int =\u0026gt;type  sf::VideoMode mode(400, 200) //sf::VideoMode::VideoMode(?,?)  sf::String title(\u0026#34;Hello\u0026#34;); //const(唯讀) String \u0026amp;(參考代表不複製)  sf::Window w(mode,title); // class =\u0026gt; type  while(true){ } return 0; }  x 為整數物件的變數 w 是一個window物件的變數 when you create object \u0026lsquo;w\u0026rsquo;\nDefault=\u0026gt; sf::Window::Window() : 初始化 mode, title 只是名稱可以更改  ###隱性轉換\n#include \u0026lt;SFML/Window.hpp\u0026gt;int main(){ int x = int(10.5); // double 可轉隱性轉型成int  sf::String title = \u0026#34;Hello\u0026#34;; // sf::String::String(\u0026#34;Hello\u0026#34;)  sf::Window w(sf::VideoMode(400, 200), title ); while(true){ } return 0; } 呼叫函式 #include \u0026lt;SFML/Window.hpp\u0026gt;int main(){ sf::Window w(sf::VideoMode(400, 200), \u0026#34;Hello\u0026#34;); while(w.isOpen()){ sf::Event evt; //參考不能傳匿名的物件  if (w.pollEvent(evt)) { //evt 存放著使用者互動發生的事件  if (evt.type == sf::Event::Closed) { std::cout \u0026lt;\u0026lt; \u0026#34;close\u0026#34; \u0026lt;\u0026lt; std::endl; w.close(); } } w.display(); } return 0; } 想對視窗做事??! #include \u0026lt;SFML/Window.hpp\u0026gt;int main(){ sf::RenderWindow w(sf::VideoMode(400, 200), \u0026#34;Hello\u0026#34;); while(w.isOpen()){ sf::Event evt; //參考不能傳匿名的物件  if (w.pollEvent(evt)) { //evt 存放著使用者互動發生的事件  if (evt.type == sf::Event::Closed) { std::cout \u0026lt;\u0026lt; \u0026#34;close\u0026#34; \u0026lt;\u0026lt; std::endl; w.close(); } } sf::Font font; font.loadFromFile(\u0026#34;arial.ttf\u0026#34;); sf::Text text(\u0026#34;Hello\u0026#34;, font); w.draw(text); w.display(); } return 0; }   用text的建構 =\u0026gt;要給字串 和字型 為了產生字型\n 用Font()建構 再loadFromFile()\r因為Font()第二個建構原本就要有字型了\r   sf::RenderWindow 在 Graphics.hpp 裡面\n  #include \u0026lt;SFML/Window.hpp\u0026gt;int main(){ sf::RebderWindow w(sf::VideoMode(400, 200), \u0026#34;Hello\u0026#34;); sf::Font font; if(font.loadFromFile(\u0026#34;arial.ttf\u0026#34;) == false ){ return 1; } //優化 字形只要產生一次不然每輪迴圈都要產生一次  sf::Text text(\u0026#34;Hello\u0026#34;, font); //文字也是一次  while(w.isOpen()){ sf::Event evt; //參考不能傳匿名的物件  if (w.pollEvent(evt)) { //evt 存放著使用者互動發生的事件  if (evt.type == sf::Event::Closed) { std::cout \u0026lt;\u0026lt; \u0026#34;close\u0026#34; \u0026lt;\u0026lt; std::endl; w.close(); } } w.draw(text); w.display(); } return EXIT_SUCCESS; }  增加if去讀讀看有沒有load到字型 return 通常是正常結束 return 1 = return EXIT_FAILTURE return 0 = return EXIT_SUCCESS  #include \u0026lt;SFML/Window.hpp\u0026gt;int main(){ sf::RebderWindow w(sf::VideoMode(400, 200), \u0026#34;Hello\u0026#34;); sf::Font font; if(font.loadFromFile(\u0026#34;arial.ttf\u0026#34;) == false ){ return 1; } //優化 字形只要產生一次不然每輪迴圈都要產生一次  sf::Text text(\u0026#34;Hello\u0026#34;, font); //文字也是一次  while(w.isOpen()){ sf::Event evt; //參考不能傳匿名的物件  if (w.pollEvent(evt)) { //evt 存放著使用者互動發生的事件  if (evt.type == sf::Event::Closed) { std::cout \u0026lt;\u0026lt; \u0026#34;close\u0026#34; \u0026lt;\u0026lt; std::endl; w.close(); } } w.clear(); // 清掉  w.draw(text); w.display(); text.move(0.01,0); // move 吃float  } return EXIT_SUCCESS; } ","permalink":"https://ycl818.github.io/blog/sfml/","tags":null,"title":""}]